// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    
    //MSB of the address select one of the RAM4k chips
    DMux4Way(in = load, sel = address[12..13],
             a = dmux.1, 
             b = dmux.2, 
             c = dmux.3, 
             d = dmux.4);
             
    //RAM512 chips
    RAM4K(in = in, load = dmux.1, address = address[0..11], out = out.1);
    RAM4K(in = in, load = dmux.2, address = address[0..11], out = out.2);
    RAM4K(in = in, load = dmux.3, address = address[0..11], out = out.3);
    RAM4K(in = in, load = dmux.4, address = address[0..11], out = out.4);
    
    //Mux the output using the MSB
    Mux4Way16(a = out.1,
              b = out.2,
              c = out.3,
              d = out.4,
              sel = address[12..13],
              out = out);
}